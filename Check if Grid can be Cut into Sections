class Solution {
    public boolean isValid(int[][] arr){
        int s=arr.length;
        int sections=0;
        int maxEnd=arr[0][1];

        for(int i=0;i<s;i++){
            if(arr[i][0]>=maxEnd){
                sections++;
            }
            maxEnd=Math.max(maxEnd,arr[i][1]);
        }

        return sections>=2;
    }
    public boolean checkValidCuts(int n, int[][] rectangles) {
        int m=rectangles.length;
        int[][] xIntervals=new int[m][2];
        int[][] yIntervals=new int[m][2];

        for(int i=0;i<m;i++){
            xIntervals[i][0]=rectangles[i][0];
            xIntervals[i][1]=rectangles[i][2];
            yIntervals[i][0]=rectangles[i][1];
            yIntervals[i][1]=rectangles[i][3];
        }

        Arrays.sort(xIntervals,(a,b)->Integer.compare(a[0],b[0]));
        Arrays.sort(yIntervals,(a,b)->Integer.compare(a[0],b[0]));

        return isValid(xIntervals) || isValid(yIntervals);

    }
}
